<?php

namespace Destiny\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UsuariosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuariosRepository extends EntityRepository
{
	public function getOne($username)
	{
		$em = $this->getEntityManager();

		$query = $em->createQueryBuilder();

		return $query->select(['u'])
			->from('DestinyAppBundle:Usuarios', 'u')
			->where($query->expr()->eq('u.usernameCanonical',':username'))
			->setParameters(['username' => $username])
			->getQuery()->getOneOrNullResult();
	}

	public function getAllByGroup($group)
	{
		$em = $this->getEntityManager();

		$query = $em->createQueryBuilder();

		$group = $this->getGrupo($group);


		return $query->select(['u'])
			->from('DestinyAppBundle:Usuarios', 'u')
			->where($query->expr()->like('u.roles',':group'))
			->setParameters(['group' => '%'.$group.'%'])
			->getQuery()->getResult();
	}

	public function getActiveUsers()
	{
		$em = $this->getEntityManager();

		$query = $em->createQueryBuilder();

		return $query->select(['u'])
			->from('DestinyAppBundle:Usuarios', 'u')
			->where($query->expr()->eq('u.enabled',true))
			->andWhere($query->expr()->isNotNull('u.lastLogin'))
/*			->andWhere($query->expr()->notLike('u.roles',':group'))
			->setParameters(['group' => '%ROLE_ROOT%'])*/
			->orderBy('u.lastLogin','asc')
			->getQuery()->getResult();

	}

    private function getGrupo($grupo)
    {

        switch ($grupo){

            case $grupo ==='Administrador':
                return 'ROLE_ROOT';

                break;

            case $grupo ==='Usuarios':
                return 'ROLE_NORMALUSER';
                break;

            case $grupo ==='Gestores':

                return 'ROLE_GESTOR';
                break;

            case $grupo === 'Gestor de protectoras':

                return 'ROLE_PROTECTORA';
                break;
        }
    }
}
